@inject HttpClient httpClient
@inject IJSRuntime JsRunTime

<div class="modal fade show d-block bg-half-black" id="exampleModal" aria-labelledby="exampleModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="staticBackdropLabel">New task</h5>
				<button @onclick="() => OnClickButtonClose.InvokeAsync(null)" type="button" class="btn-close" aria-label="Close"></button>
			</div>

			@if (TaskToUpdate != null)
			{
				<EditForm Model="TaskToUpdate" OnValidSubmit="UpdateTaskAsync">
					<div class="modal-body">
						<DataAnnotationsValidator />
						<ValidationSummary />
						<div class="mb-3">
							<label for="name" class="form-label">Name</label>
							<InputText @bind-Value="TaskToUpdate.Name" class="form-control" id="name" />
						</div>

						<div class="mb-3">
							<label for="desc" class="form-label">Description</label>
							<InputTextArea @bind-Value="TaskToUpdate.Desc" class="form-control" id="desc" />
						</div>

						<div class="mb-3">
							<label for="tags" class="form-label">Tags</label>
							<InputText type="text" oninput="this.value = this.value.toUpperCase()" class="form-control text-uppercase" @bind-Value="TaskToUpdate.Tegs" id="tags" />
						</div>

						
					</div>
					<div class="modal-footer">
						<button @onclick="() => OnClickButtonClose.InvokeAsync(null)" type="button" class="btn btn-secondary">Close</button>
						<button type="submit" class="btn btn-success">Update</button>
					</div>
				</EditForm>
			}
			else
			{
				<h1>loading...</h1>
			}
		</div>
	</div>
</div>

@code {
	[Parameter]
	public EventCallback<Todo?> OnClickButtonClose { get; set; }

	[Parameter]
	public Todo? TaskToUpdate { get; set; } = null;

	private async Task UpdateTaskAsync()
	{
		HttpResponseMessage response = await httpClient.PutAsJsonAsync("https://localhost:7066/todo", TaskToUpdate);

		if (response.IsSuccessStatusCode)
		{
			await JsRunTime.InvokeVoidAsync("alert", "Successful!");
			OnClickButtonClose.InvokeAsync(TaskToUpdate);
		}
		else
		{
			await JsRunTime.InvokeVoidAsync("alert", "Fail!");
		}
	}
}